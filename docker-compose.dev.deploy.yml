services:

  db:
    image: postgres:15
    container_name: pro11-postgres-dev
    platform: ${PLATFORM:-linux/arm64/v8}
    environment:
      POSTGRES_DB: mydata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: traderpass
    volumes:
      - pgdata_dev_runner:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mydata"]
      interval: 5s
      timeout: 3s
      retries: 10
    ports:
      - "${DB_PORT:-55432}:5432"

  app:
    image: ghcr.io/${GH_OWNER:-${COMPOSE_PROJECT_NAME}}/pro11-backend:${BACKEND_TAG:-dev-latest}
    container_name: pro11-app-dev
    platform: ${PLATFORM:-linux/arm64/v8}
    pull_policy: always
    env_file:
      - .env
      - .env.private
    environment:
      APP_ENV: local
      LOG_LEVEL: DEBUG
      # Align with local behavioral flags
      FAST_STARTUP: "false"
      FAST_STARTUP_AUTO_UPGRADE: "true"
      # Ensure core data pipelines and monitors are active in runner env
      # Ingestion produces ohlcv_candles (required for features & drift)
      INGESTION_ENABLED: "true"
      # Feature scheduler computes feature snapshots periodically (uses FEATURE_SCHED_INTERVAL)
      FEATURE_SCHED_INTERVAL: "60"
      # Auto inference generates inference logs for live calibration
      INFERENCE_AUTO_LOOP_ENABLED: "true"
      INFERENCE_AUTO_LOOP_INTERVAL: "15"
      # Auto labeler assigns realized labels so live ECE/Brier can be computed
      AUTO_LABELER_ENABLED: "true"
      AUTO_LABELER_INTERVAL: "30"
      AUTO_LABELER_MIN_AGE_SECONDS: "60"
      # Calibration monitor loop for drift streaks and retrain recommendations
      CALIBRATION_MONITOR_ENABLED: "true"
      CALIBRATION_MONITOR_INTERVAL: "60"
      CALIBRATION_MONITOR_WINDOW_SECONDS: "3600"
      # Align backend symbol/interval with frontend defaults for consistent filtering
      SYMBOL: ${SYMBOL:-XRPUSDT}
      INTERVAL: ${INTERVAL:-15m}
      SIGNAL_SOURCE: ml
      ML_AUTO_LOOP_ENABLED: "true"
      ML_AUTO_EXECUTE_ENABLED: "true"
      ML_AUTO_EXECUTE_PAPER: "true"
      LOW_BUY_EXIT_LOOP_ENABLED: "true"
      AUTO_BOOTSTRAP_LOCAL: "1"
      BOOTSTRAP_BACKFILL_BARS: "50000"
      PROMOTION_MIN_ABS_AUC_DELTA: "0.0005"
      PROMOTION_MAX_ECE_DEGRADATION: "0.02"
      PROMOTION_MAX_BRIER_DEGRADATION: "0.02"
      PROMOTION_MIN_VAL_SAMPLES: "400"
      BOTTOM_MIN_LABELS: "20"
      BOTTOM_OHLCV_FETCH_CAP: "80000"
      # Backend DB connection (local db service)
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
      POSTGRES_DB: mydata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: traderpass
    ports:
      - "${APP_PORT:-8000}:8000"
    volumes:
      - ./backend/migrations:/app/backend/migrations:ro
      - ./artifacts/models:/app/artifacts/models
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    # Note: local auto-sync/watch disabled by default to avoid unintended propagation

  frontend:
    image: ghcr.io/${GH_OWNER:-${COMPOSE_PROJECT_NAME}}/pro11-frontend:${FRONTEND_TAG:-dev-latest}
    container_name: pro11-frontend-dev
    platform: ${PLATFORM:-linux/arm64/v8}
    pull_policy: always
    environment:
      BACKEND_ORIGIN: http://app:8000
    depends_on:
      - app
    ports:
      - "${FRONTEND_DEV_PORT:-5173}:80"
    volumes:
      - ./frontend/nginx.prod.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    # Note: local auto-sync/watch disabled by default to avoid unintended propagation

volumes:
  pgdata_dev_runner:
