services:

  db:
    image: postgres:15
    container_name: pro11-postgres-dev
    environment:
      POSTGRES_DB: mydata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: traderpass
    volumes:
      - pgdata_dev_runner:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mydata"]
      interval: 5s
      timeout: 3s
      retries: 10
    ports:
      - "${DB_PORT:-55432}:5432"

  app:
    image: ghcr.io/${GH_OWNER:-${COMPOSE_PROJECT_NAME}}/pro11-backend:dev-latest
    container_name: pro11-app-dev
    env_file:
      - .env
      - .env.private
    environment:
      APP_ENV: local
      LOG_LEVEL: DEBUG
      # Backend DB connection (local db service)
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
      POSTGRES_DB: mydata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: traderpass
    ports:
      - "${APP_PORT:-8000}:8000"
    volumes:
      - ./backend/migrations:/app/backend/migrations:ro
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    image: ghcr.io/${GH_OWNER:-${COMPOSE_PROJECT_NAME}}/pro11-frontend:dev-latest
    container_name: pro11-frontend-dev
    environment:
      BACKEND_ORIGIN: http://app:8000
    depends_on:
      - app
    ports:
      - "${FRONTEND_PORT:-5173}:80"
    volumes:
      - ./frontend/nginx.prod.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped

volumes:
  pgdata_dev_runner:
