function f(u){return{period:u,buffer:[],sum:0}}function l(u,n){if(u.buffer.push(n),u.sum+=n,u.buffer.length>u.period){const r=u.buffer.shift();u.sum-=r}return u.sum/u.buffer.length}function e(u,n=3){const r=2/(u+1);return{period:u,alpha:r,values:[],maxStore:u*n}}function o(u,n){return u.values.push(n),u.values.length>u.maxStore&&u.values.splice(0,u.values.length-u.maxStore),u.last===void 0?u.last=n:u.last=u.alpha*n+(1-u.alpha)*u.last,u.last}export{e as a,f as c,o as e,l as s};
