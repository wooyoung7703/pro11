import{j as F,k as l,c as D}from"./index-BtrOmqR2.js";import s from"./http-CilSfrpq.js";const K=F("ohlcv",()=>{const u=l("XRPUSDT"),t=l(""),w=l(120),n=l([]),S=l({pct_change:null,avg_volume:null,volatility:null}),A=l(null),v=l(!1),f=l(null),i=l(!0),m=l(15),h=l([]),P=l(0),g=l(),y=l(!1);let c=null,o=null;function G(e,a){t.value||(t.value=a)}async function d(e){if(!(!u.value||!t.value)){v.value=!0,f.value=null;try{const r=(await s.get("/api/ohlcv/recent",{params:{symbol:u.value,interval:t.value,limit:(e==null?void 0:e.limit)??w.value,include_open:(e==null?void 0:e.includeOpen)===!0?"1":void 0}})).data||{};n.value=Array.isArray(r.candles)?r.candles:[],S.value=r.metrics||{pct_change:null,avg_volume:null,volatility:null}}catch(a){f.value=a.__friendlyMessage||a.message||"fetch failed"}finally{v.value=!1}}}let p=!1;async function R(e,a=600){if(p||!u.value||!t.value)return 0;const r=n.value.length?n.value[0].open_time:void 0,M=e||r;if(!M)return 0;p=!0;try{const Y=(await s.get("/api/ohlcv/history",{params:{symbol:u.value,interval:t.value,limit:a,before_open_time:M}})).data||{},q=Array.isArray(Y.candles)?Y.candles:[],C=r,b=q.filter(z=>!C||z.open_time<C);return b.length&&(n.value=[...b,...n.value]),b.length}catch{return 0}finally{p=!1}}async function k(){if(!(!u.value||!t.value))try{const a=(await s.get("/api/ohlcv/gaps/status",{params:{symbol:u.value,interval:t.value}})).data||{};h.value=Array.isArray(a.segments)?a.segments:[],P.value=a.open_segments||h.value.filter(r=>r.state==="open").length}catch{}}async function I(){if(!(!u.value||!t.value))try{const a=(await s.get("/api/ohlcv/meta",{params:{symbol:u.value,interval:t.value,sample_for_gap:1500}})).data||{};A.value=a.completeness_365d_percent??null}catch{}}function _(){O(),i.value&&(o=setInterval(d,Math.max(5,m.value)*1e3))}function O(){o&&clearInterval(o),o=null}function x(){c&&clearInterval(c),c=null,y.value=!1}async function T(){try{const e=await s.post("/api/ohlcv/backfill/year",null,{params:{symbol:u.value,interval:t.value}});g.value=e.data.state||e.data,y.value=!0,c||(c=setInterval(B,3e3))}catch{}}async function B(){try{const e=await s.get("/api/ohlcv/backfill/year/status",{params:{symbol:u.value,interval:t.value}});g.value=e.data,e.data&&["success","error","partial","idle"].includes(e.data.status)&&(x(),e.data.status==="success"&&(d(),k(),I()))}catch{}}function j(){i.value=!i.value,_()}function E(e){m.value=e,_()}const L=D(()=>n.value.length?n.value[n.value.length-1]:null),U=D(()=>{if(n.value.length<1)return null;let e=n.value[0].low,a=n.value[0].high;for(const r of n.value)r.low<e&&(e=r.low),r.high>a&&(a=r.high);return{low:e,high:a}});return{symbol:u,interval:t,limit:w,candles:n,metrics:S,loading:v,error:f,auto:i,pollSec:m,gapSegments:h,openGapCount:P,yearBackfill:g,yearBackfillPolling:y,completeness365d:A,initDefaults:G,fetchRecent:d,fetchGaps:k,startPolling:_,stopPolling:O,toggleAuto:j,setPollSec:E,lastCandle:L,range:U,startYearBackfill:T,pollYearStatus:B,stopYearPolling:x,fetchOlder:R,fetchMeta:I}});export{K as u};
