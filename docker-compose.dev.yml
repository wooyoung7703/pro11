# Explicit development compose file (hot reload + bind mounts)
services:

  db:
    image: postgres:15
    container_name: xrp-postgres-dev
    environment:
      POSTGRES_DB: mydata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: traderpass
    volumes:
      - pgdata_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mydata"]
      interval: 5s
      timeout: 3s
      retries: 10
    ports:
      - "${DB_PORT:-55432}:5432"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: xrp-app:dev
    env_file:
      - .env
      - .env.private
  # No DB dependency; app uses .env POSTGRES_* (host.docker.internal or external host)
    environment:
      APP_ENV: ${APP_ENV:-local}
      LOG_LEVEL: ${LOG_LEVEL:-DEBUG}
      FAST_STARTUP: ${FAST_STARTUP:-true}
      DEV_RELOAD: ${DEV_RELOAD:-1}
      # --- Explicit DB settings (use local compose DB service) ---
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
      POSTGRES_DB: mydata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: traderpass
      SKIP_DB: "false"
      # DB 설정은 .env 값을 그대로 사용 (.env 에서 host.docker.internal 로 바꾸면 호스트 DB로 연결)
      # 로컬 컨테이너 Postgres 서비스(db)에 붙고 싶다면 .env 에 POSTGRES_HOST=db 로 지정하거나
      # 별도 프로필: `docker compose --env-file .env.dockerdb up -d` 형태 사용 권장
      # 중요: 기능 플래그는 env_file(.env)의 값을 그대로 사용하도록 여기서 오버라이드하지 않습니다.
      # Verified multi-feed list (BBC, HN, Coindesk, Verge, Ars)
      NEWS_RSS_FEEDS: ${NEWS_RSS_FEEDS:-https://feeds.bbci.co.uk/news/world/rss.xml,https://hnrss.org/frontpage,https://www.coindesk.com/arc/outboundfeeds/rss,https://www.theverge.com/rss/index.xml,https://feeds.arstechnica.com/arstechnica/index}
      # Force polling for watchfiles (Windows / some network FS issues)
      WATCHFILES_FORCE_POLLING: 1
    volumes:
      - ./backend:/app/backend
      - ./pyproject.toml:/app/pyproject.toml:ro
      - ./poetry.lock:/app/poetry.lock:ro
      - ./scripts:/app/scripts
    # Windows bind mounts may not preserve +x; invoke via sh directly (no chmod needed)
    command: ["sh","-c","sh ./scripts/run-dev.sh"]
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${APP_PORT:-8000}:8000"
    restart: unless-stopped

  frontend:
    image: node:20-alpine
    working_dir: /app
    # Dev entry script ensures full deps (tailwindcss) present; uses marker file to skip repeated installs
    command: ["sh","-c","sh ./scripts/dev-entry.sh"]
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    environment:
      # Frontend no longer sets a default NEWS_RSS_FEEDS; backend owns feed list.
      VITE_BACKEND_URL: http://app:8000
      CHOKIDAR_USEPOLLING: 1
      WATCHPACK_POLLING: true
      FORCE_COLOR: 1
    depends_on:
      - app

volumes:
  frontend_node_modules:
  pgdata_dev:
