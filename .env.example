###############################################
# 환경 변수 예시 (.env.example)
# 이 파일을 .env로 복사하여 로컬에서 값을 채워 사용하세요.
# 민감한 키(API/비밀번호)는 절대 git에 올리지 말고, 별도 비공개 파일(.env.private 등)에 보관하세요.
# 프론트엔드(Vite)용 환경 변수는 frontend/.env.example 참고 (VITE_ 접두어 필요)
###############################################

## 기본 설정 / 로깅
APP_ENV=local
LOG_LEVEL=INFO
API_KEY=__CHANGE_ME__
API_KEY_AUTO_GENERATE=true

## 데이터 수집(인제션) 토글
INGESTION_ENABLED=true

## 데이터베이스 연결 설정
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_USER=postgres
POSTGRES_PASSWORD=__CHANGE_ME__
POSTGRES_DB=mydata
AUTO_SCHEMA_ENSURE=true

## 학습/프로모션/보정 모니터링 자동화
AUTO_RETRAIN_ENABLED=true
AUTO_PROMOTE_ENABLED=true
CALIBRATION_MONITOR_ENABLED=true
SKIP_DB=false

# 모델 프로모션(승격) 기준 (백엔드 키 이름과 일치)
# - AUTO_PROMOTE_MIN_AUC_IMPROVE: 프로덕션 대비 AUC 상대 개선율(예: 0.01 = +1%)
# - AUTO_PROMOTE_MIN_SAMPLE_GROWTH: 샘플수 증가 배율(예: 1.05 = +5%)
# - AUTO_PROMOTE_MIN_INTERVAL: 최소 승격 간격(초)
AUTO_PROMOTE_MIN_AUC_IMPROVE=0.01
AUTO_PROMOTE_MIN_SAMPLE_GROWTH=1.05
AUTO_PROMOTE_MIN_INTERVAL=1800

# 초기 모델 부트스트랩 게이트(최소 성능/최대 허용 보정오차)
# - INITIAL_MODEL_MIN_AUC: 최소 ROC AUC (0.5=랜덤, 1.0=완벽)
# - INITIAL_MODEL_MAX_ECE: 최대 허용 ECE (0=완벽 보정, 값이 작을수록 좋음)
#   권장 기본값: AUC ≥ 0.65, ECE ≤ 0.05 (도메인/리스크에 따라 조정)
INITIAL_MODEL_MIN_AUC=0.65
INITIAL_MODEL_MAX_ECE=0.05
# (프론트 Admin의 Bootstrap 폼 초기값은 VITE_BOOTSTRAP_MIN_AUC/MAX_ECE로도 제어 가능)
APP_ENV=dev
# 자세한 내용: frontend/.env.example 참고
DISABLE_API_KEY=1
# Allow API key via query string (for SSE or limited clients). Use only in dev/test.
ALLOW_API_KEY_QUERY=1
# (옵션) 클래스 불균형이 큰 경우 PR-AUC 하한도 함께 둘 수 있음
# INITIAL_MODEL_MIN_PRAUC=0.20

# 보정(캘리브레이션) 드리프트 감지 기준 (백엔드 키와 일치)
# - CALIBRATION_MONITOR_ECE_DRIFT_ABS: ECE 절대 변화 허용치
# - CALIBRATION_MONITOR_ECE_DRIFT_REL: 기준 대비 상대 변화율 허용치 (0.5 = +50%)
# - CALIBRATION_MONITOR_ABS_STREAK_TRIGGER / REL_STREAK_TRIGGER: 연속 편차 허용 횟수
# - CALIBRATION_MONITOR_WINDOW_SECONDS: 모니터링 윈도우(초)
# - CALIBRATION_MONITOR_MIN_SAMPLES: 윈도우 내 최소 표본수(미만이면 판단 보류)
CALIBRATION_MONITOR_ECE_DRIFT_ABS=0.05
CALIBRATION_MONITOR_ECE_DRIFT_REL=0.5
CALIBRATION_MONITOR_ABS_STREAK_TRIGGER=3
CALIBRATION_MONITOR_REL_STREAK_TRIGGER=3
CALIBRATION_MONITOR_WINDOW_SECONDS=10800
CALIBRATION_MONITOR_MIN_SAMPLES=200
# 모니터링 주기(초)
CALIBRATION_MONITOR_INTERVAL=60

# --- 캘리브레이션 추천 튜닝(빈번 알림 완화용) ---
# 매우 큰 ΔECE 휴리스틱 계수. ΔECE >= MULTIPLIER * CALIBRATION_MONITOR_ECE_DRIFT_ABS 이면 추천 진입
# 권장: 2.0~2.5
CALIBRATION_ABS_DELTA_MULTIPLIER=2.0
# 추천 쿨다운(초). 0보다 크면 진입 후 해당 시간 동안 재추천 억제
# 권장: 21600 (6시간)
CALIBRATION_RECOMMEND_COOLDOWN_SECONDS=21600

# (옵션) 캘리브레이션(Bin) 계산 파라미터 — 참고용, 현재 코드에서 직접 사용하지 않음
# CALIBRATION_BINS=10
# CALIBRATION_MIN_BIN_SAMPLES=50
# CALIBRATION_WILSON_Z=1.96

CALIBRATION_RETRAIN_ENABLED=true
CALIBRATION_RETRAIN_MIN_INTERVAL=10800
AUTO_RETRAIN_MIN_SAMPLES=15000
TRAINING_VALIDATION_FRACTION=0.3

# (옵션) Drift Z-Score 임계값(백엔드 다중 피처 드리프트 계산용)
# DRIFT_Z_THRESHOLD=3.0

## 모델 아티팩트 저장/보존 설정
# - MODEL_ARTIFACT_DIR: 학습 결과(모델) JSON을 저장하는 디렉터리. 기본값은 artifacts/models
# - 운영 시 볼륨으로 마운트하여 컨테이너 재시작/배포 간에도 파일이 유지되도록 하세요.
# - 외부 정리 스크립트/CI가 해당 디렉터리를 삭제하지 않도록 주의하세요.
# - 진단: GET /admin/models/artifacts/verify 로 레지스트리와 파일 실존 여부를 교차검증합니다.
# - 누락 시: /api/training/run 으로 재학습(store=true)하여 아티팩트를 재생성하세요.
MODEL_ARTIFACT_DIR=artifacts/models

# (추가) 학습 프로모션 파라미터(backend.common.config.BaseConfig 사용)
# - TRAINING_PROMOTE_MIN_AUC_DELTA: 기존 대비 AUC 최소 개선폭 (절대값)
# - TRAINING_PROMOTE_MAX_ECE_DELTA: 허용되는 ECE 악화의 최대폭 (절대값)
# - TRAINING_PROMOTE_MIN_VAL_SAMPLES: 검증 최소 샘플 수
# - RATE_LIMIT_TRAINING_RPS/BURST: /api/training/* 엔드포인트 호출 속도 제한
TRAINING_PROMOTE_MIN_AUC_DELTA=0.005
TRAINING_PROMOTE_MAX_ECE_DELTA=0.002
TRAINING_PROMOTE_MIN_VAL_SAMPLES=50
RATE_LIMIT_TRAINING_RPS=0.2
RATE_LIMIT_TRAINING_BURST=2

# 감성 피처 학습 제어
# - TRAINING_INCLUDE_SENTIMENT: 감성 피처를 기본 포함할지 여부 (특정 엔드포인트에서 ablation으로 무시 가능)
# - TRAINING_IMPUTE_SENTIMENT: 감성 피처 결측 대체 방식 (ffill|zero|none)
# - TRAINING_SENTIMENT_FEATURES: 감성 피처 명시 리스트(콤마 구분). 비워두면 접두어 sent_ 로 자동 탐지
# - TRAINING_ABLATION_REPORT: /api/training/run 에서 요청 시 감성 제외(ablation) 비교 리포트 활성화
TRAINING_INCLUDE_SENTIMENT=true
TRAINING_IMPUTE_SENTIMENT=ffill
TRAINING_SENTIMENT_FEATURES=sent_score,sent_cnt,sent_pos_ratio,sent_d1,sent_d5,sent_vol_30,sent_ema_5m,sent_ema_15m,sent_ema_60m
TRAINING_ABLATION_REPORT=true

TEST_MODE=false
AUTO_LABELER_ENABLED=true
AUTO_LABELER_INTERVAL=15
AUTO_LABELER_MIN_AGE_SECONDS=120
AUTO_LABELER_BATCH_LIMIT=1000

## 기본 종목/주기/루프
SYMBOL=XRPUSDT
INTERVAL=1m
FEATURE_SCHED_INTERVAL=60
INFERENCE_AUTO_LOOP_ENABLED=true
INFERENCE_AUTO_LOOP_INTERVAL=15

# 프론트엔드와 비교를 위해서는 frontend/.env(.development)에서
# VITE_INFERENCE_AUTO_LOOP_INTERVAL 값을 설정할 수 있습니다.
# Admin의 자동 갱신 간격은 프론트 환경변수로 제어 가능합니다:
# - VITE_RISK_AUTO_INTERVAL_MS (Risk 상태 자동 새로고침)
# - VITE_BACKFILL_POLL_MS (Feature Backfill Runs 폴링 간격)

OHLCV_INCLUDE_OPEN_DEFAULT=false
OHLCV_WS_SNAPSHOT_INCLUDE_OPEN=true
KLINE_CONSUMER_BATCH_SIZE=1
ALLOW_ADMIN_NOAUTH=0  # 로컬 디버깅 외에는 0 유지 (관리자 무인증 위험)

# (참고) Job Center에서 Year Backfill 시작/취소 버튼을 제공하며,
# 기본 SYMBOL/INTERVAL을 변경해 특정 심볼/주기를 대상으로 제어할 수 있습니다.

## 수수료(트레이딩 수수료 설정)
TRADING_FEE_MODE=taker
TRADING_FEE_TAKER=0.001
TRADING_FEE_MAKER=0.001

## 라이브 트레이딩 기본 크기 / 리스크 초기 자본
LIVE_TRADE_BASE_SIZE=5
RISK_STARTING_EQUITY=1000

# 사전 리스크 제약(진입 전 가드)
# - RISK_DAILY_LOSS_CAP: 일일 손실 한도(초기자본 대비 비율, 예: 0.05=5%)
# - RISK_MAX_DRAWDOWN: 최대 낙폭 한도(초기자본 대비 비율, 예: 0.2=20%)
# - RISK_MAX_SYMBOL_EXPOSURE: 심볼 단위 최대 익스포저(예: 200 USDT)
# - RISK_MAX_CONCURRENT_POSITIONS: 동시 보유 가능 포지션 수
# - RISK_ATR_PERIODS/RISK_ATR_MULT: 변동성 필터(ATR 기반), 너무 높은 변동성 구간 진입 차단
# - RISK_MAX_SLIPPAGE_BPS: 허용 슬리피지 한도(bps). 초과시 시장가 주문 차단
RISK_DAILY_LOSS_CAP=0.05
RISK_MAX_DRAWDOWN=0.2
RISK_MAX_SYMBOL_EXPOSURE=200
RISK_MAX_CONCURRENT_POSITIONS=1
RISK_ATR_PERIODS=14
RISK_ATR_MULT=2.0
RISK_MAX_SLIPPAGE_BPS=15

## 메트릭/알림 (Prometheus/Alertmanager 연동 전제)
METRICS_ENABLED=true
METRICS_HOST=0.0.0.0
METRICS_PORT=9090
ALERT_ON_DRAWDOWN_BREACH=true
ALERT_ON_ORDER_FAILURE_SPIKE=true
ALERT_ON_LABEL_NODATA_SPIKE=true

## 거래소/계정 안전 설정
EXCHANGE=binance
EXCHANGE_TRADING_ENABLED=false  # 로컬 기본: 실거래 비활성 (테스트넷 권장)
# 실제 키는 추적되는 파일에 절대 저장하지 마세요. 비공개 .env.private 사용 권장
BINANCE_API_KEY=__CHANGE_ME__
BINANCE_API_SECRET=__CHANGE_ME__
BINANCE_TESTNET=true
BINANCE_ACCOUNT_TYPE=spot

# (매우 위험) 실거래를 의도적으로 허용하려면 아래 3가지를 모두 만족해야 합니다.
# 1) EXCHANGE_TRADING_ENABLED=true
# 2) BINANCE_TESTNET=false
# 3) SAFETY_ALLOW_REAL_TRADING=1
# 개발 환경에서는 절대 권장하지 않습니다.
# SAFETY_ALLOW_REAL_TRADING=1

## 포지션 관리(스케일인/청산)
SCALEIN_FREEZE_ON_EXIT=true
MAX_SCALEINS=10
MIN_ADD_DISTANCE_BPS=25
EXIT_SLICE_SECONDS=10
EXIT_REQUIRE_NET_PROFIT=true

## 감성지수 설정(인제션/집계/스트리밍)
# 감성 EMA 윈도우(분 단위). 콤마 구분. 예) 5m,15m,60m
SENTIMENT_EMA_WINDOWS=5m,15m,60m
# 기본 스텝(버킷) 크기. history 조회/집계에 사용(예: 1m/5m)
SENTIMENT_STEP_DEFAULT=1m
# 허용 최대 지연(ms). 초과 시 품질 플래그에 반영
SENTIMENT_MAX_LATENCY_MS=600000
# 중복 병합 허용 범위(초). 동일 novelty_id 또는 근접 ts 문서 병합 시 사용
SENTIMENT_DEDUP_WINDOW_SEC=120
# 프로바이더 신뢰도 가중치(JSON 문자열). 필요 시 조정
# 예: {"newswire":0.9,"twitter":0.6}
SENTIMENT_PROVIDER_TRUST_JSON={}
# SSE 스트림 노출 여부
SENTIMENT_ENABLE_SSE=true
# history 최대 포인트(과도한 응답 방지)
SENTIMENT_HISTORY_MAX_POINTS=10000
# 양/음성 판정 임계값(정규화 점수 기준)
SENTIMENT_POS_THRESHOLD=0.0
# 집계 가중치 파라미터(JSON 문자열)
# 예: {"engagement_cap":3.0,"recency_half_life_min":15}
SENTIMENT_AGG_WEIGHTS={}

# (추가) 감성 모드 신뢰성 제어
# - SENTIMENT_HISTORY_SIZE: 최근 상태 히스토리 유지 개수(감성 모드 on/off 의사결정용)
# - SENTIMENT_DISABLE_FAILURE_STREAK: 연속 실패 허용 임계(초과 시 임시 비활성)
SENTIMENT_HISTORY_SIZE=100
SENTIMENT_DISABLE_FAILURE_STREAK=5

# (추가) 뉴스 감성 윈도우 캐시 TTL(초). 동일 윈도우 반복 조회 최적화
NEWS_SENTIMENT_CACHE_TTL=30
