name: docker-build

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'docker-compose.yml'
      - 'docker-compose.dev.yml'
      - 'docker-compose.prod.yml'
      - 'Dockerfile'
      - 'frontend/Dockerfile'
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'frontend/package.json'
      - 'frontend/package-lock.json'
      - '.github/workflows/docker-build.yml'
  workflow_dispatch: {}

concurrency:
  group: docker-build-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_BACKEND: ghcr.io/${{ github.repository_owner }}/pro11-backend
  IMAGE_FRONTEND: ghcr.io/${{ github.repository_owner }}/pro11-frontend

jobs:
  build-main:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image (main)
        if: ${{ hashFiles('Dockerfile') != '' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          provenance: false
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMAGE_BACKEND }}:latest
            ${{ env.IMAGE_BACKEND }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.IMAGE_BACKEND }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_BACKEND }}:buildcache,mode=max

      - name: Build and push frontend image (main)
        if: ${{ hashFiles('frontend/Dockerfile') != '' }}
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          provenance: false
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMAGE_FRONTEND }}:latest
            ${{ env.IMAGE_FRONTEND }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.IMAGE_FRONTEND }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_FRONTEND }}:buildcache,mode=max

  build-develop:
    if: ${{ github.ref == 'refs/heads/develop' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image (develop)
        if: ${{ hashFiles('Dockerfile') != '' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          provenance: false
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMAGE_BACKEND }}:dev-latest
            ${{ env.IMAGE_BACKEND }}:dev-${{ github.sha }}
          cache-from: type=registry,ref=${{ env.IMAGE_BACKEND }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_BACKEND }}:buildcache,mode=max

      - name: Build and push frontend image (develop)
        if: ${{ hashFiles('frontend/Dockerfile') != '' }}
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          provenance: false
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMAGE_FRONTEND }}:dev-latest
            ${{ env.IMAGE_FRONTEND }}:dev-${{ github.sha }}
          cache-from: type=registry,ref=${{ env.IMAGE_FRONTEND }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_FRONTEND }}:buildcache,mode=max
