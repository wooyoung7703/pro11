services:
  db:
    image: postgres:15
    container_name: pro11-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mydata}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-traderpass}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-mydata}"]
      interval: 5s
      timeout: 3s
      retries: 10
    ports:
      - "${DB_PORT:-55432}:5432"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: xrp-app:latest
    container_name: xrp-app
    env_file:
      - .env
      - .env.private
    command:
      - /app/.venv/bin/uvicorn
      - backend.apps.api.main:app
      - --host
      - 0.0.0.0
      - --port
      - "8000"
    environment:
      # DB 연결은 .env 의 POSTGRES_* 값을 그대로 사용.
      #  - 컨테이너 내 Postgres 서비스(db)에 붙으려면 DOCKER_POSTGRES_HOST 변수 없이 기본값을 사용합니다.
      #  - 호스트/외부 RDS 로 붙으려면 .env 에 host.docker.internal 또는 실제 호스트/IP 지정
      APP_ENV: ${APP_ENV:-docker}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      # Align with local/dev behavior
      FAST_STARTUP: ${FAST_STARTUP:-false}
      FAST_STARTUP_AUTO_UPGRADE: ${FAST_STARTUP_AUTO_UPGRADE:-true}
      SIGNAL_SOURCE: ${SIGNAL_SOURCE:-ml}
      ML_AUTO_LOOP_ENABLED: ${ML_AUTO_LOOP_ENABLED:-true}
      ML_AUTO_EXECUTE_ENABLED: ${ML_AUTO_EXECUTE_ENABLED:-true}
      ML_AUTO_EXECUTE_PAPER: ${ML_AUTO_EXECUTE_PAPER:-true}
      LOW_BUY_EXIT_LOOP_ENABLED: ${LOW_BUY_EXIT_LOOP_ENABLED:-true}
      AUTO_BOOTSTRAP_LOCAL: ${AUTO_BOOTSTRAP_LOCAL:-1}
      BOOTSTRAP_BACKFILL_BARS: ${BOOTSTRAP_BACKFILL_BARS:-50000}
      PROMOTION_MIN_ABS_AUC_DELTA: ${PROMOTION_MIN_ABS_AUC_DELTA:-0.0005}
      PROMOTION_MAX_ECE_DEGRADATION: ${PROMOTION_MAX_ECE_DEGRADATION:-0.02}
      PROMOTION_MAX_BRIER_DEGRADATION: ${PROMOTION_MAX_BRIER_DEGRADATION:-0.02}
      PROMOTION_MIN_VAL_SAMPLES: ${PROMOTION_MIN_VAL_SAMPLES:-400}
      BOTTOM_MIN_LABELS: ${BOTTOM_MIN_LABELS:-20}
      BOTTOM_OHLCV_FETCH_CAP: ${BOTTOM_OHLCV_FETCH_CAP:-80000}
      AUTO_RETRAIN_ENABLED: ${AUTO_RETRAIN_ENABLED:-false}
      AUTO_PROMOTE_ENABLED: ${AUTO_PROMOTE_ENABLED:-false}
      CALIBRATION_MONITOR_ENABLED: ${CALIBRATION_MONITOR_ENABLED:-false}
      INGESTION_ENABLED: ${INGESTION_ENABLED:-false}
      SKIP_DB: ${SKIP_DB:-false}
      POSTGRES_HOST: ${DOCKER_POSTGRES_HOST:-db}
    ports:
      - "${APP_PORT:-8000}:8000"
    # Compose logs helpful for debugging pool issues
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy

  frontend:
    profiles: ["prod"]
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: xrp-frontend:latest
    container_name: xrp-frontend
    depends_on:
      - app
    environment:
      BACKEND_ORIGIN: http://app:8000
    ports:
      - "${FRONTEND_PORT:-8080}:80"
    restart: unless-stopped

volumes:
  pgdata:
